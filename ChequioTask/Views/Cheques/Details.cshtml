@model ChequioTask.Models.Cheque
@using ChequioTask.Models

@{
    ViewData["Title"] = "Cheque Details";
    bool isAdmin = User.IsInRole("Admin");

    // Map enum to badge styles
    string BadgeClass(ChequeStatus s) => s switch
    {
        ChequeStatus.Draft => "bg-secondary",
        ChequeStatus.Issued => "bg-primary",
        ChequeStatus.Cleared => "bg-success",
        ChequeStatus.Bounced => "bg-warning text-dark",
        ChequeStatus.Voided => "bg-dark",
        _ => "bg-secondary"
    };

    // Simple overdue hint (only if not cleared/voided)
    bool isOverdue = Model.DueDate.Date < DateTime.Today
                     && Model.Status != ChequeStatus.Cleared
                     && Model.Status != ChequeStatus.Voided;
}

<div class="card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center">
        <div class="d-flex align-items-center gap-2">
            <h5 class="mb-0">Cheque Details</h5>
            <span class="badge @BadgeClass(Model.Status)">@Model.Status</span>
            <span class="badge bg-secondary">#@Model.Number</span>
        </div>
                <a asp-action="Print" asp-route-id="@Model.Id" target="_blank" class="btn btn-primary">Print</a>
        <div class="btn-group">
            <a asp-action="Index" class="btn btn-outline-secondary btn-sm">Back</a>
            @if (isAdmin)
            {
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-sm">Edit</a>
                <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger btn-sm">Delete</a>
            }
        </div>
    </div>

    <div class="card-body">
        <div class="row g-3">
            <div class="col-md-6">
                <div class="small text-muted">Payee</div>
                <div class="fw-medium">@Model.PayeeName</div>
            </div>
            <div class="col-md-6">
                <div class="small text-muted">Amount</div>
                <div class="fw-medium">@Model.Amount.ToString("N2") @Model.Currency</div>
            </div>

            <div class="col-md-6">
                <div class="small text-muted">Issue Date</div>
                <div class="fw-medium">@Model.IssueDate.ToString("yyyy-MM-dd")</div>
            </div>
            <div class="col-md-6">
                <div class="small text-muted">Due Date</div>
                <div class="fw-medium">
                    @Model.DueDate.ToString("yyyy-MM-dd")
                    @if (isOverdue)
                    {
                        <span class="badge bg-danger ms-2">Overdue</span>
                    }
                </div>
            </div>

            <div class="col-12">
                <div class="small text-muted">Notes</div>
                <div class="fw-medium">@(!string.IsNullOrWhiteSpace(Model.Notes) ? Model.Notes : "-")</div>
            </div>

            <div class="col-12">
                <div class="small text-muted">Created At (UTC)</div>
                <div class="fw-medium">@Model.CreatedAtUtc.ToString("yyyy-MM-dd HH:mm:ss")</div>
            </div>
        </div>
    </div>
</div>
